-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\Tx_Signal\tx_signal_ip_dut.vhd
-- Created: 2023-02-16 15:25:41
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: tx_signal_ip_dut
-- Source Path: tx_signal_ip/tx_signal_ip_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY tx_signal_ip_dut IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dut_enable                        :   IN    std_logic;  -- ufix1
        modulation                        :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        enable_tx                         :   IN    std_logic;  -- ufix1
        enable_data                       :   IN    std_logic;  -- ufix1
        s_tdata                           :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
        s_tvalid                          :   IN    std_logic;  -- ufix1
        s_tlast                           :   IN    std_logic;  -- ufix1
        ce_out                            :   OUT   std_logic;  -- ufix1
        tdata                             :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        valid                             :   OUT   std_logic;  -- ufix1
        s_tready                          :   OUT   std_logic  -- ufix1
        );
END tx_signal_ip_dut;


ARCHITECTURE rtl OF tx_signal_ip_dut IS

  -- Component Declarations
  COMPONENT tx_signal_ip_src_Tx_Signal
    PORT( clk                             :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          reset                           :   IN    std_logic;
          modulation                      :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          enable_tx                       :   IN    std_logic;  -- ufix1
          enable_data                     :   IN    std_logic;  -- ufix1
          s_tdata                         :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          s_tvalid                        :   IN    std_logic;  -- ufix1
          s_tlast                         :   IN    std_logic;  -- ufix1
          ce_out                          :   OUT   std_logic;  -- ufix1
          tdata                           :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          valid                           :   OUT   std_logic;  -- ufix1
          s_tready                        :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : tx_signal_ip_src_Tx_Signal
    USE ENTITY work.tx_signal_ip_src_Tx_Signal(rtl);

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL enable_tx_sig                    : std_logic;  -- ufix1
  SIGNAL enable_data_sig                  : std_logic;  -- ufix1
  SIGNAL s_tvalid_sig                     : std_logic;  -- ufix1
  SIGNAL s_tlast_sig                      : std_logic;  -- ufix1
  SIGNAL ce_out_sig                       : std_logic;  -- ufix1
  SIGNAL tdata_sig                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL valid_sig                        : std_logic;  -- ufix1
  SIGNAL s_tready_sig                     : std_logic;  -- ufix1

BEGIN
  u_tx_signal_ip_src_Tx_Signal : tx_signal_ip_src_Tx_Signal
    PORT MAP( clk => clk,
              clk_enable => enb,
              reset => reset,
              modulation => modulation,  -- ufix16
              enable_tx => enable_tx_sig,  -- ufix1
              enable_data => enable_data_sig,  -- ufix1
              s_tdata => s_tdata,  -- ufix8
              s_tvalid => s_tvalid_sig,  -- ufix1
              s_tlast => s_tlast_sig,  -- ufix1
              ce_out => ce_out_sig,  -- ufix1
              tdata => tdata_sig,  -- ufix32
              valid => valid_sig,  -- ufix1
              s_tready => s_tready_sig  -- ufix1
              );

  enable_tx_sig <= enable_tx;

  enable_data_sig <= enable_data;

  s_tvalid_sig <= s_tvalid;

  s_tlast_sig <= s_tlast;

  enb <= dut_enable;

  ce_out <= ce_out_sig;

  tdata <= tdata_sig;

  valid <= valid_sig;

  s_tready <= s_tready_sig;

END rtl;

