-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\untitled\tx_mod_ip_src_Modulation.vhd
-- Created: 2023-02-16 14:09:41
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1e-05
-- Target subsystem base rate: 1e-05
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        1e-05
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- tdata                         ce_out        1e-05
-- valid                         ce_out        1e-05
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: tx_mod_ip_src_Modulation
-- Source Path: untitled/Modulation
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY tx_mod_ip_src_Modulation IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        modulation                        :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        enable                            :   IN    std_logic;
        ce_out                            :   OUT   std_logic;
        tdata                             :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        valid                             :   OUT   std_logic
        );
END tx_mod_ip_src_Modulation;


ARCHITECTURE rtl OF tx_mod_ip_src_Modulation IS

  -- Component Declarations
  COMPONENT tx_mod_ip_src_Signal_Generator
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          Modulation                      :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          Reset_1                         :   IN    std_logic;
          Enable                          :   IN    std_logic;
          re_tdata                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          im_tdata                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          m_axis_tvalid                   :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT tx_mod_ip_src_Type_Conv
    PORT( re_tdata                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          im_tdata                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          tdata                           :   OUT   std_logic_vector(31 DOWNTO 0)  -- uint32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : tx_mod_ip_src_Signal_Generator
    USE ENTITY work.tx_mod_ip_src_Signal_Generator(rtl);

  FOR ALL : tx_mod_ip_src_Type_Conv
    USE ENTITY work.tx_mod_ip_src_Type_Conv(rtl);

  -- Signals
  SIGNAL Constant1_out1                   : std_logic;
  SIGNAL Signal_Generator_out1            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Signal_Generator_out2            : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL Signal_Generator_out3            : std_logic;
  SIGNAL y                                : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_Signal_Generator : tx_mod_ip_src_Signal_Generator
    PORT MAP( clk => clk,
              reset => reset,
              enb => clk_enable,
              Modulation => modulation,  -- uint8
              Reset_1 => Constant1_out1,
              Enable => enable,
              re_tdata => Signal_Generator_out1,  -- sfix16_En14
              im_tdata => Signal_Generator_out2,  -- sfix16_En14
              m_axis_tvalid => Signal_Generator_out3
              );

  u_Type_Conv : tx_mod_ip_src_Type_Conv
    PORT MAP( re_tdata => Signal_Generator_out1,  -- sfix16_En14
              im_tdata => Signal_Generator_out2,  -- sfix16_En14
              tdata => y  -- uint32
              );

  Constant1_out1 <= '0';

  ce_out <= clk_enable;

  tdata <= y;

  valid <= Signal_Generator_out3;

END rtl;

